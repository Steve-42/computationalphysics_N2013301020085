
import pickle

HEIGHT = 8*2
WIDTH  = 5*2
J = []
# s = [[0x0FFC, 0x0FFC, 0x3303, 0x3303, 0x30C3, 0x30C3, 0x3033, 0x3033, 0x0FFC, 0x0FFC],# 0
#      [0x0000, 0x0000, 0x300C, 0x300C, 0x3FFF, 0x3FFF, 0x3000, 0x3000, 0x0000, 0x0000],# 1
#      [0x300C, 0x300C, 0x3C03, 0x3C03, 0x3303, 0x3303, 0x30C3, 0x30C3, 0x303C, 0x303C],# 2
#      [0x0C03, 0x0C03, 0x3003, 0x3003, 0x3033, 0x3033, 0x30CF, 0x30CF, 0x0F03, 0x0F03],# 3
#      [0x03C0, 0x03C0, 0x30C0, 0x30C0, 0x030C, 0x030C, 0x3FFF, 0x3FFF, 0x0300, 0x0300],# 4
#      [0x0C3F, 0x0C3F, 0x3033, 0x3033, 0x3033, 0x3033, 0x3033, 0x3033, 0x0FC3, 0x0FC3],# 5
#      [0x0FF0, 0x0FF0, 0x30CC, 0x30CC, 0x30C3, 0x30C3, 0x30C3, 0x30C3, 0x0F00, 0x0F00],# 6
#      [0x0003, 0x0003, 0x3F03, 0x3F03, 0x00C3, 0x00C3, 0x0033, 0x0033, 0x000F, 0x000F],# 7
#      [0x0F3C, 0x0F3C, 0x30C3, 0x30C3, 0x30C3, 0x30C3, 0x30C3, 0x30C3, 0x0F3C, 0x0F3C],# 8
#      [0x003C, 0x003C, 0x30C3, 0x30C3, 0x30C3, 0x30C3, 0x0CC3, 0x0CC3, 0x03FC, 0x03FC] # 9
#      ]
s = [[0x0FFC, 0x0FFC, 0x3303, 0x3303, 0x30C3, 0x30C3, 0x3033, 0x3033, 0x0FFC, 0x0FFC],# 0
     [0x0000, 0x0000, 0x300C, 0x300C, 0x3FFF, 0x3FFF, 0x3000, 0x3000, 0x0000, 0x0000],# 1
     [0x300C, 0x300C, 0x3C03, 0x3C03, 0x3303, 0x3303, 0x30C3, 0x30C3, 0x303C, 0x303C],# 2
      ]


def initJ(J):
    for i in range(HEIGHT*WIDTH):
        tmp = []
        for j in range(HEIGHT*WIDTH):
            tmp.append(0.)
        J.append(tmp)


def learningJ(J):
	for i in xrange(HEIGHT*WIDTH):
		for j in xrange(HEIGHT*WIDTH):
			sum_ = 0.
			for m in xrange(len(s)):
				if(s[m][i%WIDTH]>>(i/WIDTH) & 1 == s[m][j%WIDTH]>>(j/WIDTH) & 1):
					sum_ += 1
				else:
					sum_ -= 1
			J[i][j] = sum_ / len(s)

initJ(J)
learningJ(J)

Jfile = open("J.pkl", 'w')
pickle.dump(J, Jfile)