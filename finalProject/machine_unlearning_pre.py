
import pickle

HEIGHT = 8
WIDTH  = 5
J = []
# s = [   [0x3E, 0x51, 0x49, 0x45, 0x3E],# 0
#         [0x00, 0x42, 0x7F, 0x40, 0x00],# 1
#         [0x42, 0x61, 0x51, 0x49, 0x46],# 2
#         [0x21, 0x41, 0x45, 0x4B, 0x31],# 3
#         [0x18, 0x14, 0x12, 0x7F, 0x10],# 4
#         [0x27, 0x45, 0x45, 0x45, 0x39],# 5
#         [0x3C, 0x4A, 0x49, 0x49, 0x30],# 6
#         [0x01, 0x71, 0x09, 0x05, 0x03],# 7
#         [0x36, 0x49, 0x49, 0x49, 0x36],# 8
#         [0x06, 0x49, 0x49, 0x29, 0x1E] # 9
#      ]
s = [   [0x3E, 0x51, 0x49, 0x45, 0x3E],# 0
        [0x00, 0x42, 0x7F, 0x40, 0x00],# 1
        [0x42, 0x61, 0x51, 0x49, 0x46],# 2
     ]

def initJ(J):
    for i in range(HEIGHT*WIDTH):
        tmp = []
        for j in range(HEIGHT*WIDTH):
            tmp.append(0.)
        J.append(tmp)


def learningJ(J):
    for i in xrange(HEIGHT*WIDTH):
        for j in xrange(HEIGHT*WIDTH):
            sum_ = 0.
            for m in xrange(len(s)):
                if(s[m][i%WIDTH]>>(i/WIDTH) & 1 == s[m][j%WIDTH]>>(j/WIDTH) & 1):
                    sum_ += 1
                else:
                    sum_ -= 1
            J[i][j] = sum_ / len(s)

initJ(J)
learningJ(J)

Jfile = open("J.pkl", 'w')
pickle.dump(J, Jfile)